\relax 
\providecommand{\transparent@use}[1]{}
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\providecommand \babel@aux [2]{\global \let \babel@toc \@gobbletwo }
\@nameuse{bbl@beforestart}
\catcode `"\active 
\catcode `<\active 
\catcode `>\active 
\@nameuse{es@quoting}
\babel@aux{spanish}{}
\@writefile{toc}{\contentsline {section}{\numberline {1}Cap 1: Introduction}{1}{section.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}Ejercicios 1.3.3.1}{1}{subsection.1.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.1.1}There are $n$ webpages ($1 \leq n \leq 10M $). Page $i$ has a page rank $r_{i}$. A new page ca be added or an existing page can be removed frequently. You want to pick the current top 10 pages with the highest page ranks, in order. Which method is better? }{1}{subsubsection.1.1.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.1.2}Given a list \texttt  {L} with $100K$ integers, you need to frequently obtain \texttt  {sum(i, j)}, i.e., the sum of \texttt  {L[i] + L[i+1] + ... + L[j]}. Which data structure should you use? }{1}{subsubsection.1.1.2}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.1.3}Given an $M \times N $ integer matrix $Q(1 \leq M, N \leq 70)$, determine if there exists a submatrix $S$ of $Q$ size $A \times B (1 \leq A \leq M, 1 \leq B \leq N)$ where \texttt  {mean}$(S) = 7$. Which algorithm will not exceed $100 M$ operations per test case in the worst case? }{1}{subsubsection.1.1.3}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.1.4}Given a multiset $S$ of $M = 100K$ integers, we want to know how many different integers that we can form if we pick two (no necessarily distinct) integers from $S$ and sum them. The content of multiset $S$ is prime numbers not more than $20K$. Which algorithm will not exceed $100M$ operations per test case in the worst case?}{1}{subsubsection.1.1.4}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.1.5}You have to compute the shortest path between two vertices on a weighted Directed Acyclic Graph (DAG) with $|V|, |E| \leq 100 K$. Which algorithm(s) can be used?}{1}{subsubsection.1.1.5}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.1.6}Which algorithm produces a list of the first $10M$ prime numbers with the best time complexity?}{1}{subsubsection.1.1.6}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.1.7}How to test if the factorial of $n$, i.e., $n!$ is divisible by an integer $m$ ? $1 \leq n \leq 10^{14}$}{1}{subsubsection.1.1.7}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.1.8}You want to enumerate all occurrences of a substring $P$ (of length $m$) in a (long) string $T$ (of length $n$), if any. Both $n$ and $m$ have a maximum of $1M$ characters. Which algorith is faster? }{2}{subsubsection.1.1.8}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.1.9}Given a set $S$ of $N$ points scattered on a 2D plane ($2 \leq N \leq 5000$), find two points $\in S$ that have the greatest separating Euclidean distance. Is an $O(N^{2})$ complete search algorithm that tries all possible pairs feasible?}{2}{subsubsection.1.1.9}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.1.10}See Questin above, but now with a larger set of points: $2 \leq N \leq 200 K$ and one additional constraint: The points are randomly scattered on a 2D plane}{2}{subsubsection.1.1.10}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.1.11}See the same Question above. We still have a set of $2 \leq N \leq 200K$ points. But this time there is no guarantee that the points are randomly scattered on a 2D plane.}{2}{subsubsection.1.1.11}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}Ejercicios 1.3.5.1}{2}{subsection.1.2}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.2.1}You receive a WA verdict for a very easy problem. What you should do?}{2}{subsubsection.1.2.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.2.2}You receive a TLE verdict for your $O(N^{3})$ solution. However, the maximum $N$ is just 100. What you should do?}{2}{subsubsection.1.2.2}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.2.3}Follow up to Question above: What if the maximum $N$ is 100 000?}{3}{subsubsection.1.2.3}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.2.4}Another follow up Question: What if the maximum $N$ is 5000, the output only depends on the size of input $N$, and you still have four hours of competition time left?}{3}{subsubsection.1.2.4}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.2.5}You receive an RTE verdict. Your code (seems to) execute perfectly on your machine. What should you do?}{3}{subsubsection.1.2.5}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.2.6}Thirty minutes into the contest, you take a glance at the scoreboard. There are \textit  {many} other teams that have solved a problem $X$ that your team has not attempted. What should you do?}{3}{subsubsection.1.2.6}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.2.7}Midway through the contest, you take a glance at the scoreboard. The leading team (assume that it is not your team) has just solved problem $Y$. What should you do?}{3}{subsubsection.1.2.7}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.2.8}Your team has spent two hours on a nasty problem. You have submitted several implementations by different team members. All submissions have been judged incorrect. You have no idea what's wrong. What should you do?}{3}{subsubsection.1.2.8}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.2.9}There is one hour to go before the end of the contest. You have 1 WA code and 1 fresh idea for \textit  {another} problem. What should you (or your team) do?}{4}{subsubsection.1.2.9}\protected@file@percent }
\gdef\svg@ink@ver@settings{{\m@ne }{inkscape}{\m@ne }}
\gdef \@abspage@last{4}
